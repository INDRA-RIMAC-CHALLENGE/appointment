service: rimac-appointment

provider:
  name: aws
  runtime: nodejs18.x
  profile: default
  region: us-east-1
  stage: production
  memorySize: 512
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - sns:Publish
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource:
        - arn:aws:dynamodb:us-east-1:*:table/AppointmentTable
        - arn:aws:sns:us-east-1:*:AppointmentTopic
        - Fn::GetAtt: [SQSFromEventBridge, Arn]

  environment:
    NODE_ENV: production
    NODE_PORT: 3000
    AWS_SNS_TOPIC_ARN:
      Ref: AppointmentTopic

functions:
  api:
    handler: dist/lambda.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

  eventHandler:
    handler: dist/infraestructure/handlers/sqs-eventbridge-handler.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [SQSFromEventBridge, Arn]
          batchSize: 1

plugins:
  - serverless-jetpack
  - serverless-offline

package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - '!node_modules/aws-sdk/**'
    - '!test/**'
    - '!**/*.spec.ts'

custom:
  serverless-offline:
    httpPort: 3000
    noPrependStageInUrl: true
    useChildProcesses: true

resources:
  Resources:
    AppointmentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AppointmentTable
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: insuredId
            KeyType: HASH
          - AttributeName: scheduleId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: insuredId
            AttributeType: S
          - AttributeName: scheduleId
            AttributeType: N

    AppointmentTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: AppointmentTopic

    SQSFromEventBridge:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqs_eventbridge_to_nest
        VisibilityTimeout: 120

    SQSFromEventBridgePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: SQSFromEventBridge
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: Allow-EventBridge-SendMessage
              Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action: SQS:SendMessage
              Resource:
                Fn::GetAtt: [SQSFromEventBridge, Arn]

  Outputs:
    AppointmentTopicArn:
      Value:
        Ref: AppointmentTopic
      Export:
        Name: rimac-appointment-topic-arn

    SQSFromEventBridgeArn:
      Value:
        Fn::GetAtt: [SQSFromEventBridge, Arn]
      Export:
        Name: rimac-appointment-SQSFromEventBridgeArn
